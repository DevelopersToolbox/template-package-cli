name: Generate a Release

# This workflow is triggered by push events that match tag names beginning with 'v' but not ending with '-rc.*',
# meaning it targets stable release versions only.
on:
  push:
    tags:
      - 'v[0-9].[0-9]+.[0-9]+'
      - '!v[0-9].[0-9]+.[0-9]+rc[0-9]+'

# Manage concurrency to ensure that only one instance of this workflow runs at a time per branch/ref,
# cancelling any in-progress instances when a new one starts.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Declare default permissions as read-only to enhance security.
permissions: read-all

jobs:
  get-python-version:
    name: Get Python Version
    runs-on: ubuntu-latest
    outputs:
      highest-version: ${{ steps.get-language-versions.outputs.latest-versions }}
    steps:
      - uses: ActionsToolbox/get-language-versions-action@446919617fd774095b5dd3ed71c39dd3fd0d8f4f # v0.1.3
        id: get-language-versions
        with:
          language: "python"
          highest-only: true
    
  build-and-publish:
    name: Build & publish to PyPI
    runs-on: ubuntu-latest
    needs: get-python-version
    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
      - name: Set up Python ${{ needs.get-python-version.outputs.highest-version }}
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
        with:
          python-version: ${{ needs.get-python-version.outputs.highest-version }}
      - name: Install required tooling
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build a binary wheel and a source tarball
        run: |
          python setup.py sdist bdist_wheel
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/*

  set-release-version:
    name: Set Release Version
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.set-release-version.outputs.release-version }}
    steps:
      - name: Checkout the repository
        # Using a specific SHA for the checkout action ensures the action version is stable and secure.
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
        with:
          fetch-depth: 0
      - name: Set the release version
        id: set-release-version
        run: |
          # This script extracts the tag name from the GITHUB_REF and sets it as an output.
          echo "release-version=${GITHUB_REF#refs/*/}" >> "${GITHUB_OUTPUT}"

  create-release:
    name: Create Release
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs:
      - set-release-version
    steps:
      - name: Checkout the repository
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
        with:
          fetch-depth: 0
      - name: Generate changelog
        # Uses a third-party action to generate a changelog from commits between tags.
        uses: Bullrich/generate-release-changelog@6b60f004b4bf12ff271603dc32dbd261965ad2f2 # v2.0.2
        id: Changelog
        env:
          REPO: ${{ github.repository }}
      - name: Create a release
        id: create_release
        # This action creates a release using the tag and changelog generated in previous steps.
        uses: softprops/action-gh-release@69320dbe05506a9a39fc8ae11030b214ec2d1f87 # v2.0.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ github.ref }}
          name: ${{ needs.set-release-version.outputs.release-version }}
          body: ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false
